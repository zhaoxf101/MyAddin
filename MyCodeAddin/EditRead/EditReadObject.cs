// ------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本: 11.0.0.0
//  
//     对此文件的更改可能会导致不正确的行为。此外，如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
// ------------------------------------------------------------------------------
namespace MyCodeAddin.EditRead
{
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "11.0.0.0")]
    public partial class EditReadObject : EditReadObjectBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("using System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing Syste" +
                    "m.Text;\r\nusing EF.Server;\r\nusing EF;\r\n\r\nnamespace ");
            
            #line 9 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(BusNameSpace));
            
            #line default
            #line hidden
            this.Write("\r\n{\r\n\r\n\t[Serializable]\r\n    [");
            
            #line 13 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Factory));
            
            #line default
            #line hidden
            this.Write("(typeof(");
            
            #line 13 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write("))]\r\n#if Dev\r\n    [RunLocal]\r\n#endif\r\n\r\n\tpublic class ");
            
            #line 18 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write(":BusinessBase<");
            
            #line 18 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write(">\r\n    {\r\n        #region Business Methods\r\n\r\n\t\t");
            
            #line 22 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
 foreach(var item in Items)
		{
		 
            
            #line default
            #line hidden
            this.Write("\r\n        private static PropertyInfo<");
            
            #line 26 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.Type));
            
            #line default
            #line hidden
            this.Write("> ");
            
            #line 26 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.Name));
            
            #line default
            #line hidden
            this.Write("Property = RegisterProperty<");
            
            #line 26 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.Type));
            
            #line default
            #line hidden
            this.Write(">(p => p.");
            
            #line 26 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.Name));
            
            #line default
            #line hidden
            this.Write(", \"\");\r\n        public ");
            
            #line 27 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.Type));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 27 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.Name));
            
            #line default
            #line hidden
            this.Write("\r\n        {\r\n            get { return ReadProperty(");
            
            #line 29 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.Name));
            
            #line default
            #line hidden
            this.Write("Property); }\r\n            set { SetProperty(");
            
            #line 30 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.Name));
            
            #line default
            #line hidden
            this.Write("Property, value); }\r\n        }\r\n\r\n\t\t");
            
            #line 33 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
}
            
            #line default
            #line hidden
            this.Write("\r\n\t\t#endregion\r\n\r\n\t\t#region Factory Methods\r\n\r\n\t\tpublic static ");
            
            #line 39 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write(" Create()\r\n        {\r\n            return EF.DataPortal.Create<");
            
            #line 41 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write(">();\r\n        }\r\n\r\n\t\tpublic static ");
            
            #line 44 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write(" Fetch(System.Linq.Expressions.Expression<Func<");
            
            #line 44 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write(", bool>> exp)\r\n        {\r\n\t\t\tLambdaExpression lambda = LambdaExpression.Create<");
            
            #line 46 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write(">(exp);\r\n            return EF.DataPortal.Fetch<");
            
            #line 47 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write(">(lambda);\r\n        }\r\n\r\n\t\t");
            
            #line 50 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
 if(KeyItems.Count==1) {
            
            #line default
            #line hidden
            this.Write("\r\n        public static ");
            
            #line 52 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write(" Fetch(string code)\r\n        {\r\n            return EF.DataPortal.Fetch<");
            
            #line 54 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write(">(code);\r\n        }\r\n\r\n        public static void Delete(string code)\r\n        {\r" +
                    "\n            EF.DataPortal.Delete<");
            
            #line 59 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write(">(code);\r\n        }\r\n\r\n\t\t");
            
            #line 62 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
}
            
            #line default
            #line hidden
            this.Write("\t\t");
            
            #line 63 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
 if(KeyItems.Count>1) {
            
            #line default
            #line hidden
            this.Write("\r\n\t\tpublic static ");
            
            #line 65 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write(" Fetch(");
            
            #line 65 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
 for(int i=0;i<KeyItems.Count;i++) {
            
            #line default
            #line hidden
            
            #line 65 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
 if(i==0) {
            
            #line default
            #line hidden
            
            #line 65 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(KeyItems[i].Type));
            
            #line default
            #line hidden
            this.Write(" info");
            
            #line 65 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(KeyItems[i].Name));
            
            #line default
            #line hidden
            
            #line 65 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
 } 
            
            #line default
            #line hidden
            
            #line 65 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
 if(i>0) {
            
            #line default
            #line hidden
            this.Write(" ,");
            
            #line 65 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(KeyItems[i].Type));
            
            #line default
            #line hidden
            this.Write(" info");
            
            #line 65 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(KeyItems[i].Name));
            
            #line default
            #line hidden
            
            #line 65 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
}
            
            #line default
            #line hidden
            
            #line 65 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
 } 
            
            #line default
            #line hidden
            this.Write(")\r\n        {\r\n            return EF.DataPortal.Fetch<");
            
            #line 67 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write(">(new Criteria{");
            
            #line 67 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
for(int i=0;i<KeyItems.Count;i++){
            
            #line default
            #line hidden
            
            #line 67 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
 if(i==0) {
            
            #line default
            #line hidden
            
            #line 67 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(KeyItems[i].Name));
            
            #line default
            #line hidden
            this.Write("=info");
            
            #line 67 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(KeyItems[i].Name));
            
            #line default
            #line hidden
            
            #line 67 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
 } 
            
            #line default
            #line hidden
            
            #line 67 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
 if(i>0) {
            
            #line default
            #line hidden
            this.Write(" ,");
            
            #line 67 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(KeyItems[i].Name));
            
            #line default
            #line hidden
            this.Write("=info");
            
            #line 67 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(KeyItems[i].Name));
            
            #line default
            #line hidden
            
            #line 67 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
}
            
            #line default
            #line hidden
            
            #line 67 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
}
            
            #line default
            #line hidden
            this.Write("});\r\n        }\r\n\r\n        public static void Delete(");
            
            #line 70 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
 for(int i=0;i<KeyItems.Count;i++) {
            
            #line default
            #line hidden
            
            #line 70 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
 if(i==0) {
            
            #line default
            #line hidden
            
            #line 70 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(KeyItems[i].Type));
            
            #line default
            #line hidden
            this.Write(" info");
            
            #line 70 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(KeyItems[i].Name));
            
            #line default
            #line hidden
            
            #line 70 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
 } 
            
            #line default
            #line hidden
            
            #line 70 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
 if(i>0) {
            
            #line default
            #line hidden
            this.Write(" ,");
            
            #line 70 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(KeyItems[i].Type));
            
            #line default
            #line hidden
            this.Write(" info");
            
            #line 70 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(KeyItems[i].Name));
            
            #line default
            #line hidden
            
            #line 70 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
}
            
            #line default
            #line hidden
            
            #line 70 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
 } 
            
            #line default
            #line hidden
            this.Write(")\r\n        {\r\n            EF.DataPortal.Delete<");
            
            #line 72 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write(">(new Criteria{");
            
            #line 72 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
for(int i=0;i<KeyItems.Count;i++){
            
            #line default
            #line hidden
            
            #line 72 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
 if(i==0) {
            
            #line default
            #line hidden
            
            #line 72 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(KeyItems[i].Name));
            
            #line default
            #line hidden
            this.Write("=info");
            
            #line 72 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(KeyItems[i].Name));
            
            #line default
            #line hidden
            
            #line 72 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
 } 
            
            #line default
            #line hidden
            
            #line 72 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
 if(i>0) {
            
            #line default
            #line hidden
            this.Write(" ,");
            
            #line 72 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(KeyItems[i].Name));
            
            #line default
            #line hidden
            this.Write("=info");
            
            #line 72 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(KeyItems[i].Name));
            
            #line default
            #line hidden
            
            #line 72 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
}
            
            #line default
            #line hidden
            
            #line 72 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
}
            
            #line default
            #line hidden
            this.Write("});\r\n        }\r\n\r\n\t\t[Serializable]\r\n        public class Criteria\r\n        {\r\n\t\t");
            
            #line 78 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
foreach(var item in KeyItems)
		 {
            
            #line default
            #line hidden
            this.Write("           public ");
            
            #line 80 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.Type));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 80 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.Name));
            
            #line default
            #line hidden
            this.Write(" { get; set; }\r\n\t\t");
            
            #line 81 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
}
            
            #line default
            #line hidden
            this.Write("\r\n        }\r\n\t\t");
            
            #line 84 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\t\t\r\n\t\t#endregion\r\n\r\n\t}\r\n\r\n\t[Serializable]\r\n    [");
            
            #line 91 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Factory));
            
            #line default
            #line hidden
            this.Write("(typeof(");
            
            #line 91 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write("))]\r\n#if Dev\r\n    [RunLocal]\r\n#endif\r\n\r\n\tpublic class ");
            
            #line 96 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write(":ReadOnlyBase<");
            
            #line 96 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write(">\r\n    {\r\n        #region Business Methods\r\n\r\n\t\t");
            
            #line 100 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
 foreach(var item in Items)
		{
		 
            
            #line default
            #line hidden
            this.Write("\r\n        public ");
            
            #line 104 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.Type));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 104 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.Name));
            
            #line default
            #line hidden
            this.Write("\r\n        {\r\n            get ;\r\n            set ;\r\n        }\r\n\r\n\t\t");
            
            #line 110 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
}
            
            #line default
            #line hidden
            this.Write("\r\n\t\t#endregion\r\n\r\n\t\t#region Factory Methods\r\n\r\n\t\tpublic static ");
            
            #line 116 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write(" Create()\r\n        {\r\n            return EF.DataPortal.Create<");
            
            #line 118 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write(">();\r\n        }\r\n\r\n\t\tpublic static ");
            
            #line 121 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write(" Fetch(System.Linq.Expressions.Expression<Func<");
            
            #line 121 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write(", bool>> exp,params object[] values)\r\n        {\r\n\t\t\tLambdaExpression lambda = Lam" +
                    "bdaExpression.Create<");
            
            #line 123 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write(">(exp,values);\r\n            return EF.DataPortal.Fetch<");
            
            #line 124 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write(">(lambda);\r\n        }\r\n\r\n\t\t#endregion\r\n\r\n\t}\r\n\r\n\r\n\t[Serializable]\r\n    [");
            
            #line 133 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Factory));
            
            #line default
            #line hidden
            this.Write("(typeof(");
            
            #line 133 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write("s))]\r\n#if Dev\r\n    [RunLocal]\r\n#endif\r\n\t\r\n\tpublic class ");
            
            #line 138 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write("s:ReadOnlyListBase<");
            
            #line 138 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write("s,");
            
            #line 138 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write(">\r\n    {\r\n        #region Factory Methods\r\n\r\n        public static ");
            
            #line 142 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write("s Fetch()\r\n        {\r\n            return EF.DataPortal.Fetch<");
            
            #line 144 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write("s>();\r\n        }\r\n\r\n\t\tpublic static ");
            
            #line 147 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write("s Fetch(System.Linq.Expressions.Expression<Func<");
            
            #line 147 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write(", bool>> exp,params object[] values)\r\n\t\t{\r\n\t\t\tLambdaExpression lambda = LambdaExp" +
                    "ression.Create<");
            
            #line 149 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write(">(exp,values);\r\n            return EF.DataPortal.Fetch<");
            
            #line 150 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write("s>(lambda);\r\n\t\t}\r\n\r\n\t\tpublic static ");
            
            #line 153 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write("s Fetch(int page, int rowCount)\r\n        {\r\n            return EF.DataPortal.Fetc" +
                    "h<");
            
            #line 155 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write("s>(new Paging { Page=page,RowCount=rowCount});\r\n        }\r\n\r\n        public stati" +
                    "c ");
            
            #line 158 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write("s Fetch(int page, int rowCount, System.Linq.Expressions.Expression<Func<");
            
            #line 158 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write(", bool>> exp,params object[] values)\r\n        {\r\n            return EF.DataPortal" +
                    ".Fetch<");
            
            #line 160 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write("s>(new PagigExpress { Page=page,RowCount=rowCount,Lambda=LambdaExpression.Create<" +
                    "");
            
            #line 160 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write(@">(exp,values)});
        }

        #endregion

		[Serializable]
        public class Paging
        {
            public int Page { get; set; }
            public int RowCount { get; set; }
            public int StartIndex
            {
                get 
                {
                    if (Page >= 0 && RowCount > 0)
                    {
                        return Page * RowCount;
                    }
                    else
                    {
                        return 0;
                    }
                }
            }
        }

        [Serializable]
        public class PagigExpress
        {
            public int Page { get; set; }
            public int RowCount { get; set; }
            public int StartIndex
            {
                get
                {
                    if (Page >= 0 && RowCount > 0)
                    {
                        return Page * RowCount;
                    }
                    else
                    {
                        return 0;
                    }
                }
            }
            public LambdaExpression Lambda { get; set; }
        }

    }


	[Serializable]
    [");
            
            #line 212 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Factory));
            
            #line default
            #line hidden
            this.Write("(typeof(");
            
            #line 212 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write("s))]\r\n#if Dev\r\n    [RunLocal]\r\n#endif\r\n    public class ");
            
            #line 216 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write("s:BusinessListBase<");
            
            #line 216 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write("s,");
            
            #line 216 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write(">\r\n    {\r\n        #region Factory Methods\r\n\r\n        public static ");
            
            #line 220 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write("s Fetch()\r\n        {\r\n            return EF.DataPortal.Fetch<");
            
            #line 222 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write("s>();\r\n        }\r\n\r\n\t\tpublic static ");
            
            #line 225 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write("s Fetch(System.Linq.Expressions.Expression<Func<");
            
            #line 225 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write(", bool>> exp)\r\n\t\t{\r\n\t\t\tLambdaExpression lambda = LambdaExpression.Create<");
            
            #line 227 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write(">(exp);\r\n            return EF.DataPortal.Fetch<");
            
            #line 228 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write("s>(lambda);\r\n\t\t}\r\n\r\n\t\tpublic static ");
            
            #line 231 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write("s Fetch(int page, int rowCount)\r\n        {\r\n            return EF.DataPortal.Fetc" +
                    "h<");
            
            #line 233 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write("s>(new Paging { Page=page,RowCount=rowCount});\r\n        }\r\n\r\n        public stati" +
                    "c ");
            
            #line 236 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write("s Fetch(int page, int rowCount, System.Linq.Expressions.Expression<Func<");
            
            #line 236 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write(", bool>> exp)\r\n        {\r\n            return EF.DataPortal.Fetch<");
            
            #line 238 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write("s>(new PagigExpress { Page=page,RowCount=rowCount,Lambda=LambdaExpression.Create<" +
                    "");
            
            #line 238 "E:\MyText\ClassLibrary1\MyCodeAddin\EditRead\EditReadObject.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write(@">(exp)});
        }

        #endregion

		[Serializable]
        public class Paging
        {
            public int Page { get; set; }
            public int RowCount { get; set; }
            public int StartIndex
            {
                get 
                {
                    if (Page >= 0 && RowCount > 0)
                    {
                        return Page * RowCount;
                    }
                    else
                    {
                        return 0;
                    }
                }
            }
        }

        [Serializable]
        public class PagigExpress
        {
            public int Page { get; set; }
            public int RowCount { get; set; }
            public int StartIndex
            {
                get
                {
                    if (Page >= 0 && RowCount > 0)
                    {
                        return Page * RowCount;
                    }
                    else
                    {
                        return 0;
                    }
                }
            }
            public LambdaExpression Lambda { get; set; }
        }

    }
}");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "11.0.0.0")]
    public class EditReadObjectBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
